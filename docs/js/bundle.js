!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=React},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(0)),u=r(n(2)),o=r(n(3));u.default.render(a.default.createElement(o.default,null),document.getElementById("root"))},function(e,t){e.exports=ReactDOM},function(e,t,n){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=a(n(0)),o=a(n(4)),i=n(5),f=n(6);o.default.initializeApp(f.firebaseConfig);t.default=function(){var e=u.default.useState(),t=e[0],n=e[1];u.default.useEffect(function(){return o.default.auth().onAuthStateChanged(n)},[]);var a=new o.default.auth.GoogleAuthProvider,f=o.default.auth();return u.default.createElement(i.Container,{maxWidth:"sm"},u.default.createElement("h2",null,"React + Firebase + MaterialUI using CDN"),u.default.createElement(i.Button,r({},{variant:"contained",color:t?"default":"primary",onClick:t?function(){return f.signOut().catch(console.error)}:function(){return f.signInWithPopup(a).catch(console.error)}}),t?"sign out":"sign in"),u.default.createElement("p",null,u.default.createElement("a",{href:"https://qiita.com/K-Kachi/items/cff0c7fb1a84640c8ac0"},"Document")),t?u.default.createElement("ul",null,Object.entries(t.toJSON()).filter(function(e){e[0];var t=e[1];return"string"==typeof t||"number"==typeof t||"boolean"==typeof t}).map(function(e){var t=e[0],n=e[1];return u.default.createElement("li",{key:t},t+":\t"+n)})):u.default.createElement("p",null,"Sign in, PLEASE!"))}},function(e,t){e.exports=firebase},function(e,t){e.exports=MaterialUI},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.firebaseConfig={apiKey:"AIzaSyAKUp0u3ZV_LTsoYTZ7rt6n4Y_z5N2MNSM",authDomain:"qiita-91a45.firebaseapp.com",databaseURL:"https://qiita-91a45.firebaseio.com",projectId:"qiita-91a45",storageBucket:"",messagingSenderId:"304074657988",appId:"1:304074657988:web:f3dfd5ccb6da601f15f991"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,